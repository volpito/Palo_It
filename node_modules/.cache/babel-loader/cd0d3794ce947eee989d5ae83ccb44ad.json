{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Is.js\n *\n * Object type checks.\n */\nvar NAME = Symbol.toStringTag;\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {*} obj\n * @return {boolean}\n */\n\nexport var isURLSearchParameters = function isURLSearchParameters(object) {\n  return _typeof(object) === 'object' && typeof object.append === 'function' && typeof object.delete === 'function' && typeof object.get === 'function' && typeof object.getAll === 'function' && typeof object.has === 'function' && typeof object.set === 'function' && typeof object.sort === 'function' && object[NAME] === 'URLSearchParams';\n};\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} obj\n * @return {boolean}\n */\n\nexport var isBlob = function isBlob(object) {\n  return _typeof(object) === 'object' && typeof object.arrayBuffer === 'function' && typeof object.type === 'string' && typeof object.stream === 'function' && typeof object.constructor === 'function' && /^(Blob|File)$/.test(object[NAME]);\n};\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {boolean}\n */\n\nexport function isFormData(object) {\n  return _typeof(object) === 'object' && typeof object.append === 'function' && typeof object.set === 'function' && typeof object.get === 'function' && typeof object.getAll === 'function' && typeof object.delete === 'function' && typeof object.keys === 'function' && typeof object.values === 'function' && typeof object.entries === 'function' && typeof object.constructor === 'function' && object[NAME] === 'FormData';\n}\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {*} obj\n * @return {boolean}\n */\n\nexport var isAbortSignal = function isAbortSignal(object) {\n  return _typeof(object) === 'object' && (object[NAME] === 'AbortSignal' || object[NAME] === 'EventTarget');\n};","map":null,"metadata":{},"sourceType":"module"}