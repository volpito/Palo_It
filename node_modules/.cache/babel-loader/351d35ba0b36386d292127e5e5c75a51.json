{"ast":null,"code":"import _defineProperty from \"/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/app/javascript/components/hello_specs.test.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { render, fireEvent } from \"@testing-library/react\";\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport HelloWorld from './HelloWorld';\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\n\nimport sinon from 'sinon';\nit(\"Check if it renders\", function () {\n  var _React$createElement;\n\n  var _render = render( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement = {\n    greeting: 'Hello !',\n    __self: _this\n  }, _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 37\n  }), _React$createElement))),\n      queryByTitle = _render.queryByTitle;\n\n  var hello = queryByTitle('helloTitle');\n  expect(hello).toBeTruthy();\n});\ndescribe('try to render a prop', function () {\n  it(\"Check if it renders\", function () {\n    var _React$createElement2;\n\n    var _render2 = render( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement2 = {\n      greeting: 'Hello !',\n      __self: _this\n    }, _defineProperty(_React$createElement2, \"__self\", _this), _defineProperty(_React$createElement2, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 39\n    }), _React$createElement2))),\n        queryByTitle = _render2.queryByTitle;\n\n    var hello = queryByTitle('helloTitle');\n    expect(hello.innerText).toBe('Hello !');\n  });\n});\ndescribe('try to render a prop', function () {\n  it('should render without throwing an error ', function () {\n    var _React$createElement3, _React$createElement4;\n\n    var component = renderer.create( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement3 = {\n      __self: _this\n    }, _defineProperty(_React$createElement3, \"__self\", _this), _defineProperty(_React$createElement3, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }), _React$createElement3)));\n    expect(shallow( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement4 = {\n      __self: _this\n    }, _defineProperty(_React$createElement4, \"__self\", _this), _defineProperty(_React$createElement4, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }), _React$createElement4))).find('div').exists()).toBe(true);\n  });\n});\n/*describe('updating the value', function(){\n  var component;\n  beforeEach(function(){\n      component = ReactTestUtils.renderIntoDocument(<HelloWorld greeting = {'Hello !'} />);\n  });\n   it(\"Component should call componentWillReceiveProps on update\", () => {\n    const spy = sinon.spy(Component.prototype, \"componentWillReceiveProps\");\n    const wrapper = shallow(<HelloWorld {...props} />);\n     expect(spy.calledOnce).to.equal(false);\n    wrapper.setProps({ prop: 2 });\n    expect(spy.calledOnce).to.equal(true);\n});\n});*/","map":{"version":3,"sources":["/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/app/javascript/components/hello_specs.test.js"],"names":["React","render","fireEvent","shallow","renderer","HelloWorld","ReactTestUtils","sinon","it","queryByTitle","hello","expect","toBeTruthy","describe","innerText","toBe","component","create","find","exists"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B,C,CAAmD;;AACnD,OAAOC,KAAP,MAAkB,OAAlB;AAEEC,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAAA;;AAC9B,gBAAyBP,MAAM,eAAC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAD,CAA/B;AAAA,MAAQQ,YAAR,WAAQA,YAAR;;AACA,MAAMC,KAAK,GAAGD,YAAY,CAAC,YAAD,CAA1B;AACEE,EAAAA,MAAM,CAACD,KAAD,CAAN,CAAcE,UAAd;AACH,CAJC,CAAF;AAMAC,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCL,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAAA;;AAC9B,mBAAyBP,MAAM,eAAC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAD,CAA/B;AAAA,QAAQQ,YAAR,YAAQA,YAAR;;AACA,QAAMC,KAAK,GAAGD,YAAY,CAAC,YAAD,CAA1B;AACEE,IAAAA,MAAM,CAACD,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,SAA7B;AACH,GAJC,CAAF;AAKD,CANO,CAAR;AAWAF,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCL,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AAAA;;AACnD,QAAMQ,SAAS,GAAGZ,QAAQ,CAACa,MAAT,eAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAhB,CAAlB;AACAN,IAAAA,MAAM,CACJR,OAAO,eAAC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAD,CAAP,CACGe,IADH,CACQ,KADR,EAEGC,MAFH,EADI,CAAN,CAIEJ,IAJF,CAIO,IAJP;AAKD,GAPC,CAAF;AAQD,CATO,CAAR;AAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\"\nimport {render, fireEvent} from \"@testing-library/react\"\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport HelloWorld from './HelloWorld'\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\nimport sinon from 'sinon'\n\n  it(\"Check if it renders\", () => {\n    const { queryByTitle } = render(<HelloWorld greeting={'Hello !'}/>);\n    const hello = queryByTitle('helloTitle');\n      expect(hello).toBeTruthy();\n  });\n\n  describe('try to render a prop', () => {\n    it(\"Check if it renders\", () => {\n      const { queryByTitle } = render(<HelloWorld greeting={'Hello !'}/>);\n      const hello = queryByTitle('helloTitle');\n        expect(hello.innerText).toBe('Hello !');\n    });\n  });\n\n\n\n\n  describe('try to render a prop', () => {\n    it('should render without throwing an error ', () => {\n      const component = renderer.create(<HelloWorld/>);\n      expect(\n        shallow(<HelloWorld/>)\n          .find('div')\n          .exists()\n      ).toBe(true);\n    });\n  });\n\n  /*describe('updating the value', function(){\n    var component;\n    beforeEach(function(){\n        component = ReactTestUtils.renderIntoDocument(<HelloWorld greeting = {'Hello !'} />);\n    });\n\n    it(\"Component should call componentWillReceiveProps on update\", () => {\n      const spy = sinon.spy(Component.prototype, \"componentWillReceiveProps\");\n      const wrapper = shallow(<HelloWorld {...props} />);\n\n      expect(spy.calledOnce).to.equal(false);\n      wrapper.setProps({ prop: 2 });\n      expect(spy.calledOnce).to.equal(true);\n  });\n});*/\n"]},"metadata":{},"sourceType":"module"}