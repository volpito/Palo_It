{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar extend = require(\"./core/extend\");\n\nvar FakeTimers = require(\"@sinonjs/fake-timers\");\n\nvar globalObject = require(\"@sinonjs/commons\").global;\n\nfunction createClock(config, globalCtx) {\n  var FakeTimersCtx = FakeTimers;\n\n  if (globalCtx !== null && _typeof(globalCtx) === \"object\") {\n    FakeTimersCtx = FakeTimers.withGlobal(globalCtx);\n  }\n\n  var clock = FakeTimersCtx.install(config);\n  clock.restore = clock.uninstall;\n  return clock;\n}\n\nfunction addIfDefined(obj, globalPropName) {\n  var globalProp = globalObject[globalPropName];\n\n  if (typeof globalProp !== \"undefined\") {\n    obj[globalPropName] = globalProp;\n  }\n}\n/**\n * @param {number|Date|object} dateOrConfig The unix epoch value to install with (default 0)\n * @returns {object} Returns a lolex clock instance\n */\n\n\nexports.useFakeTimers = function (dateOrConfig) {\n  var hasArguments = typeof dateOrConfig !== \"undefined\";\n  var argumentIsDateLike = (typeof dateOrConfig === \"number\" || dateOrConfig instanceof Date) && arguments.length === 1;\n  var argumentIsObject = dateOrConfig !== null && _typeof(dateOrConfig) === \"object\" && arguments.length === 1;\n\n  if (!hasArguments) {\n    return createClock({\n      now: 0\n    });\n  }\n\n  if (argumentIsDateLike) {\n    return createClock({\n      now: dateOrConfig\n    });\n  }\n\n  if (argumentIsObject) {\n    var config = extend.nonEnum({}, dateOrConfig);\n    var globalCtx = config.global;\n    delete config.global;\n    return createClock(config, globalCtx);\n  }\n\n  throw new TypeError(\"useFakeTimers expected epoch or config object. See https://github.com/sinonjs/sinon\");\n};\n\nexports.clock = {\n  create: function create(now) {\n    return FakeTimers.createClock(now);\n  }\n};\nvar timers = {\n  setTimeout: setTimeout,\n  clearTimeout: clearTimeout,\n  setInterval: setInterval,\n  clearInterval: clearInterval,\n  Date: Date\n};\naddIfDefined(timers, \"setImmediate\");\naddIfDefined(timers, \"clearImmediate\");\nexports.timers = timers;","map":null,"metadata":{},"sourceType":"module"}