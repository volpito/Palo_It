{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar strValue = String.prototype.valueOf;\n\nvar tryStringObject = function tryStringObject(value) {\n  try {\n    strValue.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isString(value) {\n  if (typeof value === 'string') {\n    return true;\n  }\n\n  if (_typeof(value) !== 'object') {\n    return false;\n  }\n\n  return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};","map":null,"metadata":{},"sourceType":"module"}