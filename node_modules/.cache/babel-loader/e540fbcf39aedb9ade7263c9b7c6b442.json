{"ast":null,"code":"\"use strict\";\n\nvar matcherPrototype = {\n  toString: function toString() {\n    return this.message;\n  }\n};\n\nmatcherPrototype.or = function (valueOrMatcher) {\n  var createMatcher = require(\"../create-matcher\");\n\n  var isMatcher = createMatcher.isMatcher;\n\n  if (!arguments.length) {\n    throw new TypeError(\"Matcher expected\");\n  }\n\n  var m2 = isMatcher(valueOrMatcher) ? valueOrMatcher : createMatcher(valueOrMatcher);\n  var m1 = this;\n  var or = Object.create(matcherPrototype);\n\n  or.test = function (actual) {\n    return m1.test(actual) || m2.test(actual);\n  };\n\n  or.message = \"\".concat(m1.message, \".or(\").concat(m2.message, \")\");\n  return or;\n};\n\nmatcherPrototype.and = function (valueOrMatcher) {\n  var createMatcher = require(\"../create-matcher\");\n\n  var isMatcher = createMatcher.isMatcher;\n\n  if (!arguments.length) {\n    throw new TypeError(\"Matcher expected\");\n  }\n\n  var m2 = isMatcher(valueOrMatcher) ? valueOrMatcher : createMatcher(valueOrMatcher);\n  var m1 = this;\n  var and = Object.create(matcherPrototype);\n\n  and.test = function (actual) {\n    return m1.test(actual) && m2.test(actual);\n  };\n\n  and.message = \"\".concat(m1.message, \".and(\").concat(m2.message, \")\");\n  return and;\n};\n\nmodule.exports = matcherPrototype;","map":null,"metadata":{},"sourceType":"module"}