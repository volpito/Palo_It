{"ast":null,"code":"import _defineProperty from \"/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/app/javascript/components/hello_specs.test.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { render, fireEvent } from \"@testing-library/react\";\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport HelloWorld from './HelloWorld';\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\n\nimport sinon from 'sinon';\nit(\"Check if it renders\", function () {\n  var _React$createElement;\n\n  var _render = render( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement = {\n    greeting: 'Hello !',\n    __self: _this\n  }, _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 37\n  }), _React$createElement))),\n      queryByTitle = _render.queryByTitle;\n\n  var hello = queryByTitle('helloTitle');\n  expect(hello).toBeTruthy();\n});\ndescribe('try to render a prop', function () {\n  it('should render without throwing an error ', function () {\n    var _React$createElement2, _React$createElement3;\n\n    var component = renderer.create( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement2 = {\n      __self: _this\n    }, _defineProperty(_React$createElement2, \"__self\", _this), _defineProperty(_React$createElement2, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 41\n    }), _React$createElement2)));\n    expect(shallow( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement3 = {\n      __self: _this\n    }, _defineProperty(_React$createElement3, \"__self\", _this), _defineProperty(_React$createElement3, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }), _React$createElement3))).find('div').exists()).toBe(true);\n  });\n});\ndescribe('updating the value', function () {\n  var _this2 = this;\n\n  var component;\n  beforeEach(function () {\n    var _React$createElement4;\n\n    component = ReactTestUtils.renderIntoDocument( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement4 = {\n      greeting: 'Hello !',\n      __self: this\n    }, _defineProperty(_React$createElement4, \"__self\", this), _defineProperty(_React$createElement4, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 55\n    }), _React$createElement4)));\n  });\n  it(\"Component should call componentWillReceiveProps on update\", function () {\n    var _Object$assign;\n\n    var spy = sinon.spy(Component.prototype, \"componentWillReceiveProps\");\n    var wrapper = shallow( /*#__PURE__*/React.createElement(HelloWorld, Object.assign({}, props, (_Object$assign = {\n      __self: _this2\n    }, _defineProperty(_Object$assign, \"__self\", _this2), _defineProperty(_Object$assign, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 31\n    }), _Object$assign))));\n    expect(spy.calledOnce).to.equal(false);\n    wrapper.setProps({\n      prop: 2\n    });\n    expect(spy.calledOnce).to.equal(true);\n  });\n});","map":{"version":3,"sources":["/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/app/javascript/components/hello_specs.test.js"],"names":["React","render","fireEvent","shallow","renderer","HelloWorld","ReactTestUtils","sinon","it","queryByTitle","hello","expect","toBeTruthy","describe","component","create","find","exists","toBe","beforeEach","renderIntoDocument","spy","Component","prototype","wrapper","props","calledOnce","to","equal","setProps","prop"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B,C,CAAmD;;AACnD,OAAOC,KAAP,MAAkB,OAAlB;AAEEC,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAAA;;AAC9B,gBAAyBP,MAAM,eAAC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAD,CAA/B;AAAA,MAAQQ,YAAR,WAAQA,YAAR;;AACA,MAAMC,KAAK,GAAGD,YAAY,CAAC,YAAD,CAA1B;AACEE,EAAAA,MAAM,CAACD,KAAD,CAAN,CAAcE,UAAd;AACH,CAJC,CAAF;AAMAC,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCL,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AAAA;;AACnD,QAAMM,SAAS,GAAGV,QAAQ,CAACW,MAAT,eAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAhB,CAAlB;AACAJ,IAAAA,MAAM,CACJR,OAAO,eAAC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAD,CAAP,CACGa,IADH,CACQ,KADR,EAEGC,MAFH,EADI,CAAN,CAIEC,IAJF,CAIO,IAJP;AAKD,GAPC,CAAF;AAQD,CATO,CAAR;AAWAL,QAAQ,CAAC,oBAAD,EAAuB,YAAU;AAAA;;AACvC,MAAIC,SAAJ;AACAK,EAAAA,UAAU,CAAC,YAAU;AAAA;;AACjBL,IAAAA,SAAS,GAAGR,cAAc,CAACc,kBAAf,eAAkC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAI,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAlC,CAAZ;AACH,GAFS,CAAV;AAIAZ,EAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AAAA;;AACpE,QAAMa,GAAG,GAAGd,KAAK,CAACc,GAAN,CAAUC,SAAS,CAACC,SAApB,EAA+B,2BAA/B,CAAZ;AACA,QAAMC,OAAO,GAAGrB,OAAO,eAAC,oBAAC,UAAD,oBAAgBsB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAD,CAAvB;AAEAd,IAAAA,MAAM,CAACU,GAAG,CAACK,UAAL,CAAN,CAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,KAAhC;AACAJ,IAAAA,OAAO,CAACK,QAAR,CAAiB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;AACAnB,IAAAA,MAAM,CAACU,GAAG,CAACK,UAAL,CAAN,CAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,IAAhC;AACH,GAPG,CAAF;AAQH,CAdS,CAAR","sourcesContent":["import React from \"react\"\nimport {render, fireEvent} from \"@testing-library/react\"\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport HelloWorld from './HelloWorld'\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\nimport sinon from 'sinon'\n\n  it(\"Check if it renders\", () => {\n    const { queryByTitle } = render(<HelloWorld greeting={'Hello !'}/>);\n    const hello = queryByTitle('helloTitle');\n      expect(hello).toBeTruthy();\n  });\n\n  describe('try to render a prop', () => {\n    it('should render without throwing an error ', () => {\n      const component = renderer.create(<HelloWorld/>);\n      expect(\n        shallow(<HelloWorld/>)\n          .find('div')\n          .exists()\n      ).toBe(true);\n    });\n  });\n\n  describe('updating the value', function(){\n    var component;\n    beforeEach(function(){\n        component = ReactTestUtils.renderIntoDocument(<HelloWorld greeting = {'Hello !'} />);\n    });\n\n    it(\"Component should call componentWillReceiveProps on update\", () => {\n      const spy = sinon.spy(Component.prototype, \"componentWillReceiveProps\");\n      const wrapper = shallow(<HelloWorld {...props} />);\n\n      expect(spy.calledOnce).to.equal(false);\n      wrapper.setProps({ prop: 2 });\n      expect(spy.calledOnce).to.equal(true);\n  });\n});\n"]},"metadata":{},"sourceType":"module"}