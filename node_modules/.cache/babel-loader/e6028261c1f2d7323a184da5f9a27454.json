{"ast":null,"code":"\"use strict\";\n\nvar behavior = require(\"./sinon/behavior\");\n\nvar createSandbox = require(\"./sinon/create-sandbox\");\n\nvar extend = require(\"./sinon/util/core/extend\");\n\nvar fakeTimers = require(\"./sinon/util/fake-timers\");\n\nvar format = require(\"./sinon/util/core/format\");\n\nvar nise = require(\"nise\");\n\nvar Sandbox = require(\"./sinon/sandbox\");\n\nvar stub = require(\"./sinon/stub\");\n\nvar promise = require(\"./sinon/promise\");\n\nvar apiMethods = {\n  createSandbox: createSandbox,\n  assert: require(\"./sinon/assert\"),\n  match: require(\"@sinonjs/samsam\").createMatcher,\n  restoreObject: require(\"./sinon/restore-object\"),\n  expectation: require(\"./sinon/mock-expectation\"),\n  defaultConfig: require(\"./sinon/util/core/default-config\"),\n  setFormatter: format.setFormatter,\n  // fake timers\n  timers: fakeTimers.timers,\n  // fake XHR\n  xhr: nise.fakeXhr.xhr,\n  FakeXMLHttpRequest: nise.fakeXhr.FakeXMLHttpRequest,\n  // fake server\n  fakeServer: nise.fakeServer,\n  fakeServerWithClock: nise.fakeServerWithClock,\n  createFakeServer: nise.fakeServer.create.bind(nise.fakeServer),\n  createFakeServerWithClock: nise.fakeServerWithClock.create.bind(nise.fakeServerWithClock),\n  addBehavior: function addBehavior(name, fn) {\n    behavior.addBehavior(stub, name, fn);\n  },\n  // fake promise\n  promise: promise\n};\nvar sandbox = new Sandbox();\nvar api = extend(sandbox, apiMethods);\nmodule.exports = api;","map":null,"metadata":{},"sourceType":"module"}