{"ast":null,"code":"'use strict';\n\nvar _EXITS_FOREIGN_CONTEN;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Tokenizer = require('../tokenizer');\n\nvar HTML = require('./html'); //Aliases\n\n\nvar $ = HTML.TAG_NAMES;\nvar NS = HTML.NAMESPACES;\nvar ATTRS = HTML.ATTRS; //MIME types\n\nvar MIME_TYPES = {\n  TEXT_HTML: 'text/html',\n  APPLICATION_XML: 'application/xhtml+xml'\n}; //Attributes\n\nvar DEFINITION_URL_ATTR = 'definitionurl';\nvar ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nvar SVG_ATTRS_ADJUSTMENT_MAP = {\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  basefrequency: 'baseFrequency',\n  baseprofile: 'baseProfile',\n  calcmode: 'calcMode',\n  clippathunits: 'clipPathUnits',\n  diffuseconstant: 'diffuseConstant',\n  edgemode: 'edgeMode',\n  filterunits: 'filterUnits',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  limitingconeangle: 'limitingConeAngle',\n  markerheight: 'markerHeight',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  numoctaves: 'numOctaves',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  refx: 'refX',\n  refy: 'refY',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stitchtiles: 'stitchTiles',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textlength: 'textLength',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  xchannelselector: 'xChannelSelector',\n  ychannelselector: 'yChannelSelector',\n  zoomandpan: 'zoomAndPan'\n};\nvar XML_ATTRS_ADJUSTMENT_MAP = {\n  'xlink:actuate': {\n    prefix: 'xlink',\n    name: 'actuate',\n    namespace: NS.XLINK\n  },\n  'xlink:arcrole': {\n    prefix: 'xlink',\n    name: 'arcrole',\n    namespace: NS.XLINK\n  },\n  'xlink:href': {\n    prefix: 'xlink',\n    name: 'href',\n    namespace: NS.XLINK\n  },\n  'xlink:role': {\n    prefix: 'xlink',\n    name: 'role',\n    namespace: NS.XLINK\n  },\n  'xlink:show': {\n    prefix: 'xlink',\n    name: 'show',\n    namespace: NS.XLINK\n  },\n  'xlink:title': {\n    prefix: 'xlink',\n    name: 'title',\n    namespace: NS.XLINK\n  },\n  'xlink:type': {\n    prefix: 'xlink',\n    name: 'type',\n    namespace: NS.XLINK\n  },\n  'xml:base': {\n    prefix: 'xml',\n    name: 'base',\n    namespace: NS.XML\n  },\n  'xml:lang': {\n    prefix: 'xml',\n    name: 'lang',\n    namespace: NS.XML\n  },\n  'xml:space': {\n    prefix: 'xml',\n    name: 'space',\n    namespace: NS.XML\n  },\n  xmlns: {\n    prefix: '',\n    name: 'xmlns',\n    namespace: NS.XMLNS\n  },\n  'xmlns:xlink': {\n    prefix: 'xmlns',\n    name: 'xlink',\n    namespace: NS.XMLNS\n  }\n}; //SVG tag names adjustment map\n\nvar SVG_TAG_NAMES_ADJUSTMENT_MAP = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n  altglyph: 'altGlyph',\n  altglyphdef: 'altGlyphDef',\n  altglyphitem: 'altGlyphItem',\n  animatecolor: 'animateColor',\n  animatemotion: 'animateMotion',\n  animatetransform: 'animateTransform',\n  clippath: 'clipPath',\n  feblend: 'feBlend',\n  fecolormatrix: 'feColorMatrix',\n  fecomponenttransfer: 'feComponentTransfer',\n  fecomposite: 'feComposite',\n  feconvolvematrix: 'feConvolveMatrix',\n  fediffuselighting: 'feDiffuseLighting',\n  fedisplacementmap: 'feDisplacementMap',\n  fedistantlight: 'feDistantLight',\n  feflood: 'feFlood',\n  fefunca: 'feFuncA',\n  fefuncb: 'feFuncB',\n  fefuncg: 'feFuncG',\n  fefuncr: 'feFuncR',\n  fegaussianblur: 'feGaussianBlur',\n  feimage: 'feImage',\n  femerge: 'feMerge',\n  femergenode: 'feMergeNode',\n  femorphology: 'feMorphology',\n  feoffset: 'feOffset',\n  fepointlight: 'fePointLight',\n  fespecularlighting: 'feSpecularLighting',\n  fespotlight: 'feSpotLight',\n  fetile: 'feTile',\n  feturbulence: 'feTurbulence',\n  foreignobject: 'foreignObject',\n  glyphref: 'glyphRef',\n  lineargradient: 'linearGradient',\n  radialgradient: 'radialGradient',\n  textpath: 'textPath'\n}; //Tags that causes exit from foreign content\n\nvar EXITS_FOREIGN_CONTENT = (_EXITS_FOREIGN_CONTEN = {}, _defineProperty(_EXITS_FOREIGN_CONTEN, $.B, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BIG, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BLOCKQUOTE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BODY, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BR, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.CENTER, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.CODE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DD, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DIV, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DT, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.EM, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.EMBED, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H1, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H2, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H3, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H4, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H5, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H6, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.HEAD, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.HR, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.I, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.IMG, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.LI, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.LISTING, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.MENU, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.META, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.NOBR, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.OL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.P, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.PRE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.RUBY, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.S, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SMALL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SPAN, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.STRONG, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.STRIKE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SUB, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SUP, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.TABLE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.TT, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.U, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.UL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.VAR, true), _EXITS_FOREIGN_CONTEN); //Check exit from foreign content\n\nexports.causesExit = function (startTagToken) {\n  var tn = startTagToken.tagName;\n  var isFontWithAttrs = tn === $.FONT && (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null || Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null || Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n  return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n}; //Token adjustments\n\n\nexports.adjustTokenMathMLAttrs = function (token) {\n  for (var i = 0; i < token.attrs.length; i++) {\n    if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n      token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n      break;\n    }\n  }\n};\n\nexports.adjustTokenSVGAttrs = function (token) {\n  for (var i = 0; i < token.attrs.length; i++) {\n    var adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n    if (adjustedAttrName) {\n      token.attrs[i].name = adjustedAttrName;\n    }\n  }\n};\n\nexports.adjustTokenXMLAttrs = function (token) {\n  for (var i = 0; i < token.attrs.length; i++) {\n    var adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n    if (adjustedAttrEntry) {\n      token.attrs[i].prefix = adjustedAttrEntry.prefix;\n      token.attrs[i].name = adjustedAttrEntry.name;\n      token.attrs[i].namespace = adjustedAttrEntry.namespace;\n    }\n  }\n};\n\nexports.adjustTokenSVGTagName = function (token) {\n  var adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n  if (adjustedTagName) {\n    token.tagName = adjustedTagName;\n  }\n}; //Integration points\n\n\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n  return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n  if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n    for (var i = 0; i < attrs.length; i++) {\n      if (attrs[i].name === ATTRS.ENCODING) {\n        var value = attrs[i].value.toLowerCase();\n        return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n      }\n    }\n  }\n\n  return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function (tn, ns, attrs, foreignNS) {\n  if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\n    return true;\n  }\n\n  if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\n    return true;\n  }\n\n  return false;\n};","map":null,"metadata":{},"sourceType":"module"}