{"ast":null,"code":"import _defineProperty from \"/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/app/javascript/components/hello_specs.test.js\";\nimport React from \"react\";\nimport { render, fireEvent } from \"@testing-library/react\";\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport HelloWorld from './HelloWorld';\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\n\nimport sinon from 'sinon';\ndescribe('updating the value', function () {\n  var _this = this;\n\n  var component;\n  beforeEach(function () {\n    var _React$createElement;\n\n    component = ReactTestUtils.renderIntoDocument( /*#__PURE__*/React.createElement(HelloWorld, (_React$createElement = {\n      greeting: 'Hello !',\n      __self: this\n    }, _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 55\n    }), _React$createElement)));\n  });\n  it(\"Component should call componentWillReceiveProps on update\", function () {\n    var _Object$assign;\n\n    var spy = sinon.spy(component.prototype, \"componentWillReceiveProps\");\n    var wrapper = shallow( /*#__PURE__*/React.createElement(HelloWorld, Object.assign({}, props, (_Object$assign = {\n      __self: _this\n    }, _defineProperty(_Object$assign, \"__self\", _this), _defineProperty(_Object$assign, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 31\n    }), _Object$assign))));\n    expect(spy.calledOnce).to.equal(false);\n    wrapper.setProps({\n      prop: 2\n    });\n    expect(spy.calledOnce).to.equal(true);\n  });\n});","map":{"version":3,"sources":["/Users/volpito/Desktop/projets/PALO_IT_test/palo_it_mrigot/app/javascript/components/hello_specs.test.js"],"names":["React","render","fireEvent","shallow","renderer","HelloWorld","ReactTestUtils","sinon","describe","component","beforeEach","renderIntoDocument","it","spy","prototype","wrapper","props","expect","calledOnce","to","equal","setProps","prop"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B,C,CAAmD;;AACnD,OAAOC,KAAP,MAAkB,OAAlB;AAGEC,QAAQ,CAAC,oBAAD,EAAuB,YAAU;AAAA;;AACvC,MAAIC,SAAJ;AACAC,EAAAA,UAAU,CAAC,YAAU;AAAA;;AACjBD,IAAAA,SAAS,GAAGH,cAAc,CAACK,kBAAf,eAAkC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAI,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAlC,CAAZ;AACH,GAFS,CAAV;AAIAC,EAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AAAA;;AACpE,QAAMC,GAAG,GAAGN,KAAK,CAACM,GAAN,CAAUJ,SAAS,CAACK,SAApB,EAA+B,2BAA/B,CAAZ;AACA,QAAMC,OAAO,GAAGZ,OAAO,eAAC,oBAAC,UAAD,oBAAgBa,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAD,CAAvB;AAEAC,IAAAA,MAAM,CAACJ,GAAG,CAACK,UAAL,CAAN,CAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,KAAhC;AACAL,IAAAA,OAAO,CAACM,QAAR,CAAiB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;AACAL,IAAAA,MAAM,CAACJ,GAAG,CAACK,UAAL,CAAN,CAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,IAAhC;AACH,GAPG,CAAF;AAQH,CAdS,CAAR","sourcesContent":["import React from \"react\"\nimport {render, fireEvent} from \"@testing-library/react\"\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport HelloWorld from './HelloWorld'\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\nimport sinon from 'sinon'\n\n\n  describe('updating the value', function(){\n    var component;\n    beforeEach(function(){\n        component = ReactTestUtils.renderIntoDocument(<HelloWorld greeting = {'Hello !'} />);\n    });\n\n    it(\"Component should call componentWillReceiveProps on update\", () => {\n      const spy = sinon.spy(component.prototype, \"componentWillReceiveProps\");\n      const wrapper = shallow(<HelloWorld {...props} />);\n\n      expect(spy.calledOnce).to.equal(false);\n      wrapper.setProps({ prop: 2 });\n      expect(spy.calledOnce).to.equal(true);\n  });\n});\n"]},"metadata":{},"sourceType":"module"}