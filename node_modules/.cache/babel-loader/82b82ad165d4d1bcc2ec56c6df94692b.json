{"ast":null,"code":"\"use strict\";\n/* istanbul ignore next : not testing that setTimeout works */\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction nextTick(callback) {\n  setTimeout(callback, 0);\n}\n\nmodule.exports = function getNextTick(process, setImmediate) {\n  if (_typeof(process) === \"object\" && typeof process.nextTick === \"function\") {\n    return process.nextTick;\n  }\n\n  if (typeof setImmediate === \"function\") {\n    return setImmediate;\n  }\n\n  return nextTick;\n};","map":null,"metadata":{},"sourceType":"module"}