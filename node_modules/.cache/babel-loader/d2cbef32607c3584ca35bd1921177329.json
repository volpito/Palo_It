{"ast":null,"code":"\"use strict\";\n\nvar arrayProto = require(\"@sinonjs/commons\").prototypes.array;\n\nvar reduce = arrayProto.reduce;\n\nmodule.exports = function exportAsyncBehaviors(behaviorMethods) {\n  return reduce(Object.keys(behaviorMethods), function (acc, method) {\n    // need to avoid creating another async versions of the newly added async methods\n    if (method.match(/^(callsArg|yields)/) && !method.match(/Async/)) {\n      acc[\"\".concat(method, \"Async\")] = function () {\n        var result = behaviorMethods[method].apply(this, arguments);\n        this.callbackAsync = true;\n        return result;\n      };\n    }\n\n    return acc;\n  }, {});\n};","map":null,"metadata":{},"sourceType":"module"}