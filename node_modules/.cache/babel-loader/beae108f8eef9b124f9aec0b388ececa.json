{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar arrayProto = require(\"@sinonjs/commons\").prototypes.array;\n\nvar Sandbox = require(\"./sandbox\");\n\nvar forEach = arrayProto.forEach;\nvar push = arrayProto.push;\n\nfunction prepareSandboxFromConfig(config) {\n  var sandbox = new Sandbox();\n\n  if (config.useFakeServer) {\n    if (_typeof(config.useFakeServer) === \"object\") {\n      sandbox.serverPrototype = config.useFakeServer;\n    }\n\n    sandbox.useFakeServer();\n  }\n\n  if (config.useFakeTimers) {\n    if (_typeof(config.useFakeTimers) === \"object\") {\n      sandbox.useFakeTimers(config.useFakeTimers);\n    } else {\n      sandbox.useFakeTimers();\n    }\n  }\n\n  return sandbox;\n}\n\nfunction exposeValue(sandbox, config, key, value) {\n  if (!value) {\n    return;\n  }\n\n  if (config.injectInto && !(key in config.injectInto)) {\n    config.injectInto[key] = value;\n    push(sandbox.injectedKeys, key);\n  } else {\n    push(sandbox.args, value);\n  }\n}\n\nfunction createSandbox(config) {\n  if (!config) {\n    return new Sandbox();\n  }\n\n  var configuredSandbox = prepareSandboxFromConfig(config);\n  configuredSandbox.args = configuredSandbox.args || [];\n  configuredSandbox.injectedKeys = [];\n  configuredSandbox.injectInto = config.injectInto;\n  var exposed = configuredSandbox.inject({});\n\n  if (config.properties) {\n    forEach(config.properties, function (prop) {\n      var value = exposed[prop] || prop === \"sandbox\" && configuredSandbox;\n      exposeValue(configuredSandbox, config, prop, value);\n    });\n  } else {\n    exposeValue(configuredSandbox, config, \"sandbox\");\n  }\n\n  return configuredSandbox;\n}\n\nmodule.exports = createSandbox;","map":null,"metadata":{},"sourceType":"module"}