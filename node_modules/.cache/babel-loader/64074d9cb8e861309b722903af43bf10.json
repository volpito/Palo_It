{"ast":null,"code":"'use strict'; // modified from https://github.com/es-shims/es6-shim\n\nvar keys = require('object-keys');\n\nvar canBeObject = function canBeObject(obj) {\n  return typeof obj !== 'undefined' && obj !== null;\n};\n\nvar hasSymbols = require('has-symbols/shams')();\n\nvar callBound = require('call-bind/callBound');\n\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null; // eslint-disable-next-line no-unused-vars\n\nmodule.exports = function assign(target, source1) {\n  if (!canBeObject(target)) {\n    throw new TypeError('target must be an object');\n  }\n\n  var objTarget = toObject(target);\n  var s, source, i, props, syms, value, key;\n\n  for (s = 1; s < arguments.length; ++s) {\n    source = toObject(arguments[s]);\n    props = keys(source);\n    var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\n    if (getSymbols) {\n      syms = getSymbols(source);\n\n      for (i = 0; i < syms.length; ++i) {\n        key = syms[i];\n\n        if ($propIsEnumerable(source, key)) {\n          $push(props, key);\n        }\n      }\n    }\n\n    for (i = 0; i < props.length; ++i) {\n      key = props[i];\n      value = source[key];\n\n      if ($propIsEnumerable(source, key)) {\n        objTarget[key] = value;\n      }\n    }\n  }\n\n  return objTarget;\n};","map":null,"metadata":{},"sourceType":"module"}