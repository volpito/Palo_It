{"ast":null,"code":"'use strict';\n\nvar ArraySpeciesCreate = require('es-abstract/2020/ArraySpeciesCreate');\n\nvar Call = require('es-abstract/2020/Call');\n\nvar CreateDataPropertyOrThrow = require('es-abstract/2020/CreateDataPropertyOrThrow');\n\nvar Get = require('es-abstract/2020/Get');\n\nvar HasProperty = require('es-abstract/2020/HasProperty');\n\nvar IsCallable = require('es-abstract/2020/IsCallable');\n\nvar LengthOfArrayLike = require('es-abstract/2020/LengthOfArrayLike');\n\nvar ToBoolean = require('es-abstract/2020/ToBoolean');\n\nvar ToObject = require('es-abstract/2020/ToObject');\n\nvar ToString = require('es-abstract/2020/ToString');\n\nvar callBound = require('call-bind/callBound');\n\nvar isString = require('is-string'); // Check failure of by-index access of string characters (IE < 9) and failure of `0 in boxedString` (Rhino)\n\n\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\nvar strSplit = callBound('String.prototype.split');\n\nmodule.exports = function filter(callbackfn) {\n  var O = ToObject(this);\n  var self = splitString && isString(O) ? strSplit(O, '') : O;\n  var len = LengthOfArrayLike(self); // If no callback function or if callback is not a callable function\n\n  if (!IsCallable(callbackfn)) {\n    throw new TypeError('Array.prototype.filter callback must be a function');\n  }\n\n  var thisArg;\n\n  if (arguments.length > 1) {\n    thisArg = arguments[1];\n  }\n\n  var A = ArraySpeciesCreate(O, 0);\n  var k = 0;\n  var to = 0;\n\n  while (k < len) {\n    var Pk = ToString(k);\n    var kPresent = HasProperty(O, Pk);\n\n    if (kPresent) {\n      var kValue = Get(O, Pk);\n      var selected = ToBoolean(Call(callbackfn, thisArg, [kValue, k, O]));\n\n      if (selected) {\n        CreateDataPropertyOrThrow(A, ToString(to), kValue);\n        to += 1;\n      }\n    }\n\n    k += 1;\n  }\n\n  return A;\n};","map":null,"metadata":{},"sourceType":"module"}