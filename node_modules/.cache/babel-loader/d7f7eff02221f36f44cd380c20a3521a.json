{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar numToStr = Number.prototype.toString;\n\nvar tryNumberObject = function tryNumberObject(value) {\n  try {\n    numToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar numClass = '[object Number]';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isNumberObject(value) {\n  if (typeof value === 'number') {\n    return true;\n  }\n\n  if (_typeof(value) !== 'object') {\n    return false;\n  }\n\n  return hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;\n};","map":null,"metadata":{},"sourceType":"module"}