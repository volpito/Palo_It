{"ast":null,"code":"\"use strict\";\n\nvar walk = require(\"./util/core/walk\");\n\nvar getPropertyDescriptor = require(\"./util/core/get-property-descriptor\");\n\nvar hasOwnProperty = require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;\n\nvar push = require(\"@sinonjs/commons\").prototypes.array.push;\n\nfunction collectMethod(methods, object, prop, propOwner) {\n  if (typeof getPropertyDescriptor(propOwner, prop).value === \"function\" && hasOwnProperty(object, prop)) {\n    push(methods, object[prop]);\n  }\n} // This function returns an array of all the own methods on the passed object\n\n\nfunction collectOwnMethods(object) {\n  var methods = [];\n  walk(object, collectMethod.bind(null, methods, object));\n  return methods;\n}\n\nmodule.exports = collectOwnMethods;","map":null,"metadata":{},"sourceType":"module"}